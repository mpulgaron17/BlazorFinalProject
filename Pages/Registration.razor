@page "/register/{EventId:int}"
@using Microsoft.AspNetCore.Components

<h2>Event Registration</h2>
@if (Event != null)
{
    <EventCard EventName="@Event.Name" EventDate="@Event.Date" EventLocation="@Event.Location" />
    <EditForm Model="Registration" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div>
            <label>Name:</label>
            <InputText @bind-Value="Registration.Name" />
        </div>
        <div>
            <label>Email:</label>
            <InputText @bind-Value="Registration.Email" />
        </div>
        <button type="submit">Register</button>
    </EditForm>
    @if (IsRegistered)
    {
        <p>Thank you for registering!</p>
    }
}
else
{
    <p>Event not found.</p>
}

@code {
    [Parameter]
    public int EventId { get; set; }

    public class EventInfo
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public DateTime Date { get; set; }
        public string Location { get; set; }
    }

    public class RegistrationModel
    {
        [Required]
        public string Name { get; set; } = string.Empty;
        [Required]
        [EmailAddress]
        public string Email { get; set; } = string.Empty;
    }

    EventInfo? Event;
    RegistrationModel Registration = new();
    bool IsRegistered = false;

    protected override void OnInitialized()
    {
        // Mock data for demonstration
        var events = new List<EventInfo>
        {
            new EventInfo { Id = 1, Name = "Tech Conference", Date = DateTime.Today.AddDays(10), Location = "New York" },
            new EventInfo { Id = 2, Name = "Music Festival", Date = DateTime.Today.AddDays(20), Location = "Los Angeles" },
            new EventInfo { Id = 3, Name = "Art Expo", Date = DateTime.Today.AddDays(30), Location = "Chicago" }
        };
        Event = events.FirstOrDefault(e => e.Id == EventId);
    }

    void HandleValidSubmit()
    {
        IsRegistered = true;
    }
}
